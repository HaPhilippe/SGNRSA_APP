"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
var DOCUMENT_TYPE = 'P';
var NUMERIC_REGEXP = /[0-9]/g;
var NUMERIC_VALUE_BASE = 10;
var ALPHABET_REGEXP = /[a-z]/g;
var ALPHABET_START = 'a'.charCodeAt(0);
var ALPHABET_VALUE_START = 10;
var FILLER = '<';
var WEIGHTS = [7, 3, 1];
var MAX_LINE_LENGTH = 44;
var YEAR_LENGTH = 2;
var MONTH_LENGTH = 2;
var DAY_LENGTH = 2;
var calculateCheckDigit = function (str) {
    return str
        .split('')
        .map(function (character, index) {
        var char = character.toLowerCase();
        var weight = WEIGHTS[index % 3];
        var value = 0;
        if (char.match(ALPHABET_REGEXP) != null) {
            value = char.charCodeAt(0) - ALPHABET_START + ALPHABET_VALUE_START;
        }
        if (char.match(NUMERIC_REGEXP) != null) {
            value = parseInt(char, NUMERIC_VALUE_BASE);
        }
        if (char === FILLER) {
            value = 0;
        }
        return value * weight;
    })
        .reduce(function (acc, value) { return acc + value; }, 0) % NUMERIC_VALUE_BASE;
};
var formatValue = function (value, length, filler) {
    return "" + filler.repeat(length - value.length) + value;
};
var formatValueEnd = function (value, length, filler) {
    return "" + value + filler.repeat(length - value.length);
};
var formatNumber = function (value, length) {
    return formatValue(value.toString(), length, '0');
};
var formatLineParts = function (value) { return value.join(''); };
var formatDate = function (date) { return [
    formatNumber(date.year % 100, YEAR_LENGTH),
    formatNumber(date.month, MONTH_LENGTH),
    formatNumber(date.day, DAY_LENGTH),
].join(''); };
var getUserName = function (name) {
    return name
        .toUpperCase()
        .replace(/\`/ig, '')
        .replace(/[^a-z]/ig, FILLER);
};
var getCountryCode = function (code) { return code.toUpperCase(); };
var getDocumentNumber = function (passportNumber) {
    return passportNumber
        .replace(/(\s|\t)+/ig, '')
        .toUpperCase();
};
var getDate = function (birthday) { return formatDate(utils_1.getDatePartsFromString(birthday)); };
var getGender = function (gender) { return gender.toUpperCase(); };
var generateMRZ = function (args) {
    var user = args.user;
    var firstName = getUserName(user.firstName);
    var lastName = getUserName(user.lastName);
    var country = getCountryCode(user.countryCode);
    var passportNumber = getDocumentNumber(user.passportNumber);
    var firstLineWithoutExtraFillers = formatLineParts([
        DOCUMENT_TYPE,
        FILLER,
        country,
        lastName,
        FILLER,
        FILLER,
        firstName,
    ]);
    var firstLine = formatValueEnd(firstLineWithoutExtraFillers, MAX_LINE_LENGTH, FILLER);
    var passportCheckNumber = calculateCheckDigit(passportNumber);
    var nationality = getCountryCode(user.nationality);
    var birthday = getDate(user.birthday);
    var birthdayCheckNumber = calculateCheckDigit(birthday);
    var gender = getGender(user.gender);
    var validUntilDay = getDate(user.validUntilDay);
    var validUntilDateCheckNumber = calculateCheckDigit(validUntilDay);
    var personalNumber = getDocumentNumber(user.personalNumber);
    var personalNumberCheckNumber = calculateCheckDigit(personalNumber);
    var controlCheckNumber = calculateCheckDigit(formatLineParts([
        passportNumber,
        passportCheckNumber,
        birthday,
        birthdayCheckNumber,
        validUntilDay,
        validUntilDateCheckNumber,
        personalNumber,
        personalNumberCheckNumber,
    ]));
    var secondLine = formatLineParts([
        passportNumber,
        passportCheckNumber,
        nationality,
        birthday,
        birthdayCheckNumber,
        gender,
        validUntilDay,
        validUntilDateCheckNumber,
        personalNumber,
        personalNumberCheckNumber,
        controlCheckNumber,
    ]);
    return formatLineParts([
        firstLine,
        utils_1.NEW_LINE,
        secondLine,
    ]);
};
exports.default = generateMRZ;
//# sourceMappingURL=generate-mrz.js.map