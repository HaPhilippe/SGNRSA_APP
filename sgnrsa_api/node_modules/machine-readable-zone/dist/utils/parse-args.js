"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var validate_args_1 = require("./validate-args");
var FULL_CMD_ARG_PREFIX = '--';
var SHORT_CMD_ARG_PREFIX = '-';
var KEY_VALUE_DELIMITER = '=';
var KEBAB_CASE_DELIMITER = '-';
var PREFIX_REPLACE_PATTERN = new RegExp("^(" + FULL_CMD_ARG_PREFIX + "|" + SHORT_CMD_ARG_PREFIX + ")");
var EMPTY_PARAM = null;
var isNotALastArrayItem = function (i, args) { return i < args.length - 1; };
var isFullParamName = function (value) {
    return validate_args_1.getStringOrDefault(value).startsWith(FULL_CMD_ARG_PREFIX);
};
var isShortParamName = function (value) {
    return validate_args_1.getStringOrDefault(value).startsWith(SHORT_CMD_ARG_PREFIX);
};
var isParamName = function (value) { return isFullParamName(value) || isShortParamName(value); };
var isKeyValueParam = function (value) { return value.includes(KEY_VALUE_DELIMITER); };
var extractKeyAndValueFromParam = function (str) {
    var parts = str.split(KEY_VALUE_DELIMITER);
    var key = parts[0];
    var value = parts[1] != null ? parts[1] : EMPTY_PARAM;
    return { key: key, value: value };
};
var removePrefixesFromParam = function (value) { return value.replace(PREFIX_REPLACE_PATTERN, ''); };
var convertKebabCaseToCamelCase = function (value) {
    var result = [];
    for (var i = 0; i < value.length; i += 1) {
        var char = value[i];
        if (char === KEBAB_CASE_DELIMITER) {
            var j = i;
            while (value[j] === KEBAB_CASE_DELIMITER && j < value.length) {
                j += 1;
            }
            if (j < value.length) {
                var nextChar = value[j];
                if (nextChar != null) {
                    result.push(nextChar.toUpperCase());
                    i = j;
                }
            }
        }
        else {
            result.push(char);
        }
    }
    return result.join('');
};
var parseCommandLineArgs = function (args) {
    var results = {};
    for (var i = 0; i < args.length; i += 1) {
        var arg = args[i];
        if (isParamName(arg)) {
            var nextArg = isNotALastArrayItem(i, args) ? args[i + 1] : EMPTY_PARAM;
            if (isKeyValueParam(arg)) {
                var parts = extractKeyAndValueFromParam(arg);
                arg = parts.key;
                nextArg = parts.value;
            }
            arg = convertKebabCaseToCamelCase(removePrefixesFromParam(arg));
            if (nextArg !== EMPTY_PARAM &&
                !isFullParamName(nextArg) &&
                !isShortParamName(nextArg)) {
                results[arg] = nextArg;
            }
            else {
                results[arg] = true;
            }
        }
    }
    return results;
};
exports.default = parseCommandLineArgs;
//# sourceMappingURL=parse-args.js.map